{{ config(
    transient=false,
    materialized= 'view',
    schema= 'SNOWFLAKE_USAGE',
    tags= ["staging", "daily"]
    ) 
}}
 

WITH source AS (
  SELECT * FROM  {{source(var('account_usage_schema'),'QUERY_HISTORY')}}
),
rename as (
   SELECT 
  MD5(S.QUERY_ID) AS K_QUERY_DLHK
  ,MD5(S.DATABASE_ID) AS K_DATABASE_DLHK  
  ,MD5(S.WAREHOUSE_ID) AS K_WAREHOUSE_DLHK
  ,MD5(S.USER_NAME) AS K_USER_DLHK
  ,S.DATABASE_ID AS K_DATABASE_BK
  ,S.QUERY_ID AS K_QUERY_BK
  ,S.SCHEMA_ID AS K_SCHEMA_BK
  ,S.SESSION_ID AS K_SESSION_BK
  ,S.WAREHOUSE_ID AS K_WAREHOUSE_BK
  ,S.USER_NAME AS A_USERNAME
  ,S.START_TIME AS A_START_TIME
  ,S.END_TIME AS A_END_TIME
  ,S.ERROR_CODE AS A_ERROR_CODE
  ,S.ERROR_MESSAGE AS A_ERROR_MESSAGE
  ,S.EXECUTION_STATUS AS A_EXECUTION_STATUS
  ,S.QUERY_TAG AS A_QUERY_TAG
  ,S.QUERY_TEXT AS A_QUERY_TEXT
  ,S.QUERY_TYPE AS A_QUERY_TYPE
  ,S.RELEASE_VERSION AS A_RELEASE_VERSION
  ,S.ROLE_NAME AS A_ROLE_NAME
  ,S.SCHEMA_NAME AS A_SCHEMA_NAME
  ,S.CLUSTER_NUMBER AS A_CLUSTER_NUMBER  
  ,S.IS_CLIENT_GENERATED_STATEMENT='TRUE' AS B_IS_CLIENT_GENERATED_STATEMENT
  ,S.INBOUND_DATA_TRANSFER_CLOUD AS A_INBOUND_DATA_TRANSFER_CLOUD
  ,S.INBOUND_DATA_TRANSFER_REGION AS A_INBOUND_DATA_TRANSFER_REGION
  ,S.OUTBOUND_DATA_TRANSFER_CLOUD AS A_OUTBOUND_DATA_TRANSFER_CLOUD
  ,S.OUTBOUND_DATA_TRANSFER_REGION AS A_OUTBOUND_DATA_TRANSFER_REGION
  ,S.BYTES_DELETED AS M_BYTES_DELETED
  ,S.BYTES_READ_FROM_RESULT AS M_BYTES_READ_FROM_RESULT
  ,S.BYTES_SCANNED AS M_BYTES_SCANNED
  ,S.BYTES_SENT_OVER_THE_NETWORK AS M_BYTES_SENT_OVER_THE_NETWORK
  ,S.BYTES_SPILLED_TO_LOCAL_STORAGE AS M_BYTES_SPILLED_TO_LOCAL_STORAGE
  ,S.BYTES_SPILLED_TO_REMOTE_STORAGE AS M_BYTES_SPILLED_TO_REMOTE_STORAGE
  ,S.BYTES_WRITTEN AS M_BYTES_WRITTEN
  ,S.BYTES_WRITTEN_TO_RESULT AS M_BYTES_WRITTEN_TO_RESULT  
  ,S.COMPILATION_TIME AS M_COMPILATION_TIME
  ,S.COMPILATION_TIME/1000 AS M_COMPILATION_TIME_SECONDS
  ,S.CREDITS_USED_CLOUD_SERVICES::numeric(15,6) AS M_CREDITS_USED_CLOUD_SERVICES
  ,S.EXECUTION_TIME AS M_EXECUTION_TIME
  ,S.EXECUTION_TIME/1000 AS M_EXECUTION_TIME_SECONDS
  ,S.EXTERNAL_FUNCTION_TOTAL_INVOCATIONS AS M_EXTERNAL_FUNCTION_TOTAL_INVOCATIONS
  ,S.EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES AS M_EXTERNAL_FUNCTION_TOTAL_RECEIVED_BYTES
  ,S.EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS AS M_EXTERNAL_FUNCTION_TOTAL_RECEIVED_ROWS
  ,S.EXTERNAL_FUNCTION_TOTAL_SENT_BYTES AS M_EXTERNAL_FUNCTION_TOTAL_SENT_BYTES
  ,S.EXTERNAL_FUNCTION_TOTAL_SENT_ROWS AS M_EXTERNAL_FUNCTION_TOTAL_SENT_ROWS
  ,S.INBOUND_DATA_TRANSFER_BYTES AS M_INBOUND_DATA_TRANSFER_BYTES
  ,S.LIST_EXTERNAL_FILES_TIME AS M_LIST_EXTERNAL_FILES_TIME
  ,S.OUTBOUND_DATA_TRANSFER_BYTES AS M_OUTBOUND_DATA_TRANSFER_BYTES
  ,S.PARTITIONS_SCANNED AS M_PARTITIONS_SCANNED
  ,S.PARTITIONS_TOTAL AS M_PARTITIONS_TOTAL
  ,S.PERCENTAGE_SCANNED_FROM_CACHE AS M_PERCENTAGE_SCANNED_FROM_CACHE
  ,S.QUERY_LOAD_PERCENT AS M_QUERY_LOAD_PERCENT
  ,S.QUEUED_OVERLOAD_TIME AS M_QUEUED_OVERLOAD_TIME
  ,S.QUEUED_OVERLOAD_TIME/1000 AS M_QUEUED_OVERLOAD_TIME_SECONDS
  ,S.QUEUED_PROVISIONING_TIME AS M_QUEUED_PROVISIONING_TIME
  ,S.QUEUED_PROVISIONING_TIME/1000 AS M_QUEUED_PROVISIONING_TIME_SECONDS
  ,S.QUEUED_REPAIR_TIME/1000 AS M_QUEUED_REPAIR_TIME_SECONDS
  ,S.ROWS_DELETED AS M_ROWS_DELETED
  ,S.ROWS_INSERTED AS M_ROWS_INSERTED
  ,S.ROWS_PRODUCED AS M_ROWS_PRODUCED
  ,S.ROWS_UNLOADED AS M_ROWS_UNLOADED
  ,S.ROWS_UPDATED AS M_ROWS_UPDATED
  ,S.TOTAL_ELAPSED_TIME AS M_TOTAL_ELAPSED_TIME
  ,S.TOTAL_ELAPSED_TIME/1000 AS M_TOTAL_ELAPSED_TIME_SECONDS
  ,S.TRANSACTION_BLOCKED_TIME AS M_TRANSACTION_BLOCKED_TIME 
  ,S.TRANSACTION_BLOCKED_TIME/1000 AS M_TRANSACTION_BLOCKED_TIME_SECONDS
FROM source S
     
)

SELECT * FROM rename